// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium -f podippools.yml --schema=derived --docs -b --derive=Default --derive=PartialEq --smart-derive-elision
// kopium version: 0.20.1

#[allow(unused_imports)]
mod prelude {
    pub use kube_derive::CustomResource;
    #[cfg(feature = "schemars")]
    pub use schemars::JsonSchema;
    pub use serde::{Deserialize, Serialize};
    #[cfg(feature = "builder")]
    pub use typed_builder::TypedBuilder;
}
use self::prelude::*;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[cfg_attr(feature = "builder", derive(TypedBuilder))]
#[cfg_attr(feature = "schemars", derive(JsonSchema))]
#[cfg_attr(not(feature = "schemars"), kube(schema = "disabled"))]
#[kube(
    group = "cilium.io",
    version = "v2alpha1",
    kind = "CiliumPodIPPool",
    plural = "ciliumpodippools"
)]
#[kube(derive = "Default")]
#[kube(derive = "PartialEq")]
pub struct CiliumPodIPPoolSpec {
    /// IPv4 specifies the IPv4 CIDRs and mask sizes of the pool
    #[serde(default, skip_serializing_if = "Option::is_none")]
    #[cfg_attr(feature = "builder", builder(default, setter(strip_option)))]
    pub ipv4: Option<CiliumPodIPPoolIpv4>,
    /// IPv6 specifies the IPv6 CIDRs and mask sizes of the pool
    #[serde(default, skip_serializing_if = "Option::is_none")]
    #[cfg_attr(feature = "builder", builder(default, setter(strip_option)))]
    pub ipv6: Option<CiliumPodIPPoolIpv6>,
}

/// IPv4 specifies the IPv4 CIDRs and mask sizes of the pool
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[cfg_attr(feature = "builder", derive(TypedBuilder))]
#[cfg_attr(feature = "schemars", derive(JsonSchema))]
pub struct CiliumPodIPPoolIpv4 {
    /// CIDRs is a list of IPv4 CIDRs that are part of the pool.
    #[cfg_attr(feature = "builder", builder(default))]
    pub cidrs: Vec<String>,
    /// MaskSize is the mask size of the pool.
    #[serde(rename = "maskSize")]
    pub mask_size: i64,
}

/// IPv6 specifies the IPv6 CIDRs and mask sizes of the pool
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[cfg_attr(feature = "builder", derive(TypedBuilder))]
#[cfg_attr(feature = "schemars", derive(JsonSchema))]
pub struct CiliumPodIPPoolIpv6 {
    /// CIDRs is a list of IPv6 CIDRs that are part of the pool.
    #[cfg_attr(feature = "builder", builder(default))]
    pub cidrs: Vec<String>,
    /// MaskSize is the mask size of the pool.
    #[serde(rename = "maskSize")]
    pub mask_size: i64,
}
