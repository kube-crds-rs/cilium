// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium -f /tmp/tmpq4f_9i4f --schema=derived --docs -b --derive=Default --derive=PartialEq
// kopium version: 0.20.1

#[allow(unused_imports)]
mod prelude {
    pub use kube_derive::CustomResource;
    #[cfg(feature = "schemars")]
    pub use schemars::JsonSchema;
    pub use serde::{Deserialize, Serialize};
    #[cfg(feature = "builder")]
    pub use typed_builder::TypedBuilder;
}
use self::prelude::*;

/// Spec is the specification of the desired behavior of the CiliumBGPNodeConfigOverride.
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[cfg_attr(feature = "builder", derive(TypedBuilder))]
#[cfg_attr(feature = "schemars", derive(JsonSchema))]
#[cfg_attr(not(feature = "schemars"), kube(schema = "disabled"))]
#[kube(
    group = "cilium.io",
    version = "v2alpha1",
    kind = "CiliumBGPNodeConfigOverride",
    plural = "ciliumbgpnodeconfigoverrides"
)]
#[kube(derive = "Default")]
#[kube(derive = "PartialEq")]
pub struct CiliumBGPNodeConfigOverrideSpec {
    /// BGPInstances is a list of BGP instances to override.
    #[serde(rename = "bgpInstances")]
    #[cfg_attr(feature = "builder", builder(default))]
    pub bgp_instances: Vec<CiliumBGPNodeConfigOverrideBgpInstances>,
    /// NodeRef is the name of the node for which the BGP configuration is overridden.
    #[serde(rename = "nodeRef")]
    pub node_ref: String,
}

/// CiliumBGPNodeConfigInstanceOverride defines configuration options which can be overridden for a specific BGP instance.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[cfg_attr(feature = "builder", derive(TypedBuilder))]
#[cfg_attr(feature = "schemars", derive(JsonSchema))]
pub struct CiliumBGPNodeConfigOverrideBgpInstances {
    /// LocalPort is port to use for this BGP instance.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "localPort")]
    #[cfg_attr(feature = "builder", builder(default, setter(strip_option)))]
    pub local_port: Option<i32>,
    /// Name is the name of the BGP instance for which the configuration is overridden.
    pub name: String,
    /// Peers is a list of peer configurations to override.
    #[serde(default, skip_serializing_if = "Option::is_none")]
    #[cfg_attr(feature = "builder", builder(default, setter(strip_option)))]
    pub peers: Option<Vec<CiliumBGPNodeConfigOverrideBgpInstancesPeers>>,
    /// RouterID is BGP router id to use for this instance. It must be unique across all BGP instances.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "routerID")]
    #[cfg_attr(feature = "builder", builder(default, setter(strip_option)))]
    pub router_id: Option<String>,
}

/// CiliumBGPNodeConfigPeerOverride defines configuration options which can be overridden for a specific peer.
#[derive(Serialize, Deserialize, Clone, Debug, Default, PartialEq)]
#[cfg_attr(feature = "builder", derive(TypedBuilder))]
#[cfg_attr(feature = "schemars", derive(JsonSchema))]
pub struct CiliumBGPNodeConfigOverrideBgpInstancesPeers {
    /// LocalAddress is the IP address to use for connecting to this peer.
    #[serde(
        default,
        skip_serializing_if = "Option::is_none",
        rename = "localAddress"
    )]
    #[cfg_attr(feature = "builder", builder(default, setter(strip_option)))]
    pub local_address: Option<String>,
    /// LocalPort is source port to use for connecting to this peer.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "localPort")]
    #[cfg_attr(feature = "builder", builder(default, setter(strip_option)))]
    pub local_port: Option<i32>,
    /// Name is the name of the peer for which the configuration is overridden.
    pub name: String,
}
